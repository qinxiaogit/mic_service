version: '2.1'
services:
    swoft:
        container_name: swoft
        image: swoft/swoft
        ports:
            - "81:80"
            - "8099:8099"
        volumes:
            - ./:/var/www/swoft
        stdin_open: true
        environment:
            - TZ=Asia/Shanghai
        tty: true
        entrypoint: php /var/www/swoft/bin/swoft  server:start
#        command: php /var/www/swoft/bin/swoft ws:start
    consul:
      image: progrium/consul:latest
      command: -server -bootstrap -ui-dir /ui
      healthcheck:
        test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8500 || exit 1"]
        interval: 5s
        retries: 10
      ports:
        - 8500:8500
      environment:
          - TZ=Asia/Shanghai
      expose:
        - 53
        - 8300
        - 8301
        - 8302
        - 8400
        - 8500
      volumes:
          - ./docker-file/DNS/resolv.conf:/etc/resolv.conf

    nginx-lb:
      build: docker-file/nginx/
      depends_on:
        consul:
          condition: service_healthy
      ports:
        - 8000:8000
        - 8443:8443
        - 8001:8001
        - 8444:8444
      expose:
        - 8000
        - 8443
        - 8001
        - 8444
      environment:
        - TZ=Asia/Shanghai
      links:
        - consul:consul
      command: >
          /bin/containerpilot
          -config file:///etc/containerpilot/containerpilot.json
          nginx -g "daemon off;"
      volumes:
          - ./docker-file/DNS/resolv.conf:/etc/resolv.conf
    kong-database:
      image: postgres:9.5
      ports:
        - "5432:5432"
      environment:
        - POSTGRES_USER=kong
        - POSTGRES_DB=kong
        - TZ=Asia/Shanghai
      volumes:
        - postgresql_data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "kong"]
        interval: 10s
        timeout: 5s
        retries: 5

    kong-migration:
      image: kong
      depends_on:
        kong-database:
          condition: service_healthy
      environment:
          - KONG_DATABASE=postgres
          - KONG_PG_HOST=kong-database
          - TZ=Asia/Shanghai
      command: kong migrations up

    kong:
      build: docker-file/kong/
      depends_on:
        kong-database:
          condition: service_healthy
        kong-migration:
          condition: service_started
      environment:
         - KONG_DATABASE=postgres
         - KONG_PG_HOST=kong-database
         - KONG_PG_DATABASE=kong
         - KONG_ADMIN_LISTEN=0.0.0.0:8001
         - TZ=Asia/Shanghai
      expose:
        - 8000
        - 8001
        - 8443
        - 8444
      volumes:
         - ./docker-file/DNS/resolv.conf:/etc/resolv.conf
      healthcheck:
        test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8000 || exit 1"]
        interval: 5s
        retries: 10
    portainer:
        image: portainer/portainer
        ports:
          - "9000:9000"
        command: -H unix:///var/run/docker.sock
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data
        environment:
          - TZ=Asia/Shanghai
    DNS:
      image: jpillora/dnsmasq
      volumes:
            - ./docker-file/DNS/dnsmasq.conf:/etc/dnsmasq.conf
      ports:
            - "53:53/tcp"
            - "53:53/udp"
            - "5380:8080"
      environment:
            - TZ=Asia/Shanghai
            - HTTP_USER=owlet
            - HTTP_PASS=miao
    kong-dashboard:
        image: pgbi/kong-dashboard
        ports:
          - 8080:8080
        volumes:
          - .:/app:cached
          - /app/node_modules/
        depends_on:
          kong:
            condition: service_healthy
        entrypoint: ./docker/entrypoint_dev.sh
        volumes:
            - ./docker-file/DNS/dnsmasq.conf:/etc/dnsmasq.conf
volumes:
      portainer_data:
      postgresql_data:

